{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hanif Darmawan\\\\Downloads\\\\Hacker Front End Days 3\\\\react-router-portfolio\\\\src\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const lightModeMediaQuery = window.matchMedia('(prefers-color-scheme: light)');\n  const mode = lightModeMediaQuery.matches ? 'light' : 'dark';\n  const [theme, setTheme] = useState(mode);\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"f5J7ClWw6np3QdvBCjVQl4FxPyo=\");\n_c = ThemeProvider;\nexport default ThemeContext;\nThemeContext.propTypes = {\n  children: PropTypes.node.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useState","PropTypes","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","lightModeMediaQuery","window","matchMedia","mode","matches","theme","setTheme","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","$RefreshReg$"],"sources":["C:/Users/Hanif Darmawan/Downloads/Hacker Front End Days 3/react-router-portfolio/src/ThemeContext.js"],"sourcesContent":["import { createContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const lightModeMediaQuery = window.matchMedia('(prefers-color-scheme: light)');\r\n  const mode = lightModeMediaQuery.matches ? 'light' : 'dark';\r\n\r\n  const [theme, setTheme] = useState(mode);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContext;\r\n\r\nThemeContext.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,UAAU,CAAC,+BAA+B,CAAC;EAC9E,MAAMC,IAAI,GAAGH,mBAAmB,CAACI,OAAO,GAAG,OAAO,GAAG,MAAM;EAE3D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACW,IAAI,CAAC;EAExC,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAAEE,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;EAED,oBACEb,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEL,KAAK;MAAEE;IAAY,CAAE;IAAAT,QAAA,EAClDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACf,EAAA,CAfIF,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAiBnB,eAAeD,YAAY;AAE3BA,YAAY,CAACoB,SAAS,GAAG;EACvBlB,QAAQ,EAAEL,SAAS,CAACwB,IAAI,CAACC;AAC3B,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}